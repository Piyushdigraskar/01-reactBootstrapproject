{"version":3,"file":"static/js/496.d5f22c07.chunk.js","mappings":"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","sources":["../node_modules/react-bootstrap/esm/Feedback.js","../node_modules/react-bootstrap/esm/FormContext.js","../node_modules/react-bootstrap/esm/FormCheckInput.js","../node_modules/react-bootstrap/esm/FormCheckLabel.js","../node_modules/react-bootstrap/esm/FormCheck.js","../node_modules/react-bootstrap/esm/ElementChildren.js","../node_modules/react-bootstrap/esm/FormControl.js","../node_modules/react-bootstrap/esm/FormFloating.js","../node_modules/react-bootstrap/esm/FormGroup.js","../node_modules/react-bootstrap/esm/FormLabel.js","../node_modules/react-bootstrap/esm/FormRange.js","../node_modules/react-bootstrap/esm/FormSelect.js","../node_modules/react-bootstrap/esm/FormText.js","../node_modules/react-bootstrap/esm/Switch.js","../node_modules/react-bootstrap/esm/FloatingLabel.js","../node_modules/react-bootstrap/esm/Form.js","Components/Pages/Contact.js"],"sourcesContent":["import classNames from 'classnames';\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  /**\n   * Specify whether the feedback is for valid or invalid fields\n   *\n   * @type {('valid'|'invalid')}\n   */\n  type: PropTypes.string,\n  /** Display feedback as a tooltip. */\n  tooltip: PropTypes.bool,\n  as: PropTypes.elementType\n};\nconst Feedback = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  as: Component = 'div',\n  className,\n  type = 'valid',\n  tooltip = false,\n  ...props\n}, ref) => /*#__PURE__*/_jsx(Component, {\n  ...props,\n  ref: ref,\n  className: classNames(className, `${type}-${tooltip ? 'tooltip' : 'feedback'}`)\n}));\nFeedback.displayName = 'Feedback';\nFeedback.propTypes = propTypes;\nexport default Feedback;","\"use client\";\n\nimport * as React from 'react';\n\n// TODO\n\nconst FormContext = /*#__PURE__*/React.createContext({});\nexport default FormContext;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormCheckInput = /*#__PURE__*/React.forwardRef(({\n  id,\n  bsPrefix,\n  className,\n  type = 'checkbox',\n  isValid = false,\n  isInvalid = false,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'input',\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check-input');\n  return /*#__PURE__*/_jsx(Component, {\n    ...props,\n    ref: ref,\n    type: type,\n    id: id || controlId,\n    className: classNames(className, bsPrefix, isValid && 'is-valid', isInvalid && 'is-invalid')\n  });\n});\nFormCheckInput.displayName = 'FormCheckInput';\nexport default FormCheckInput;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormCheckLabel = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  htmlFor,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check-label');\n  return /*#__PURE__*/_jsx(\"label\", {\n    ...props,\n    ref: ref,\n    htmlFor: htmlFor || controlId,\n    className: classNames(className, bsPrefix)\n  });\n});\nFormCheckLabel.displayName = 'FormCheckLabel';\nexport default FormCheckLabel;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext, useMemo } from 'react';\nimport Feedback from './Feedback';\nimport FormCheckInput from './FormCheckInput';\nimport FormCheckLabel from './FormCheckLabel';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { hasChildOfType } from './ElementChildren';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst FormCheck = /*#__PURE__*/React.forwardRef(({\n  id,\n  bsPrefix,\n  bsSwitchPrefix,\n  inline = false,\n  reverse = false,\n  disabled = false,\n  isValid = false,\n  isInvalid = false,\n  feedbackTooltip = false,\n  feedback,\n  feedbackType,\n  className,\n  style,\n  title = '',\n  type = 'checkbox',\n  label,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as = 'input',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check');\n  bsSwitchPrefix = useBootstrapPrefix(bsSwitchPrefix, 'form-switch');\n  const {\n    controlId\n  } = useContext(FormContext);\n  const innerFormContext = useMemo(() => ({\n    controlId: id || controlId\n  }), [controlId, id]);\n  const hasLabel = !children && label != null && label !== false || hasChildOfType(children, FormCheckLabel);\n  const input = /*#__PURE__*/_jsx(FormCheckInput, {\n    ...props,\n    type: type === 'switch' ? 'checkbox' : type,\n    ref: ref,\n    isValid: isValid,\n    isInvalid: isInvalid,\n    disabled: disabled,\n    as: as\n  });\n  return /*#__PURE__*/_jsx(FormContext.Provider, {\n    value: innerFormContext,\n    children: /*#__PURE__*/_jsx(\"div\", {\n      style: style,\n      className: classNames(className, hasLabel && bsPrefix, inline && `${bsPrefix}-inline`, reverse && `${bsPrefix}-reverse`, type === 'switch' && bsSwitchPrefix),\n      children: children || /*#__PURE__*/_jsxs(_Fragment, {\n        children: [input, hasLabel && /*#__PURE__*/_jsx(FormCheckLabel, {\n          title: title,\n          children: label\n        }), feedback && /*#__PURE__*/_jsx(Feedback, {\n          type: feedbackType,\n          tooltip: feedbackTooltip,\n          children: feedback\n        })]\n      })\n    })\n  });\n});\nFormCheck.displayName = 'FormCheck';\nexport default Object.assign(FormCheck, {\n  Input: FormCheckInput,\n  Label: FormCheckLabel\n});","import * as React from 'react';\n\n/**\n * Iterates through children that are typically specified as `props.children`,\n * but only maps over children that are \"valid elements\".\n *\n * The mapFunction provided index will be normalised to the components mapped,\n * so an invalid component would not increase the index.\n *\n */\nfunction map(children, func) {\n  let index = 0;\n  return React.Children.map(children, child => /*#__PURE__*/React.isValidElement(child) ? func(child, index++) : child);\n}\n\n/**\n * Iterates through children that are \"valid elements\".\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child with the index reflecting the position relative to \"valid components\".\n */\nfunction forEach(children, func) {\n  let index = 0;\n  React.Children.forEach(children, child => {\n    if ( /*#__PURE__*/React.isValidElement(child)) func(child, index++);\n  });\n}\n\n/**\n * Finds whether a component's `children` prop includes a React element of the\n * specified type.\n */\nfunction hasChildOfType(children, type) {\n  return React.Children.toArray(children).some(child => /*#__PURE__*/React.isValidElement(child) && child.type === type);\n}\nexport { map, forEach, hasChildOfType };","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport warning from 'warning';\nimport Feedback from './Feedback';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormControl = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  type,\n  size,\n  htmlSize,\n  id,\n  className,\n  isValid = false,\n  isInvalid = false,\n  plaintext,\n  readOnly,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'input',\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-control');\n  process.env.NODE_ENV !== \"production\" ? warning(controlId == null || !id, '`controlId` is ignored on `<FormControl>` when `id` is specified.') : void 0;\n  return /*#__PURE__*/_jsx(Component, {\n    ...props,\n    type: type,\n    size: htmlSize,\n    ref: ref,\n    readOnly: readOnly,\n    id: id || controlId,\n    className: classNames(className, plaintext ? `${bsPrefix}-plaintext` : bsPrefix, size && `${bsPrefix}-${size}`, type === 'color' && `${bsPrefix}-color`, isValid && 'is-valid', isInvalid && 'is-invalid')\n  });\n});\nFormControl.displayName = 'FormControl';\nexport default Object.assign(FormControl, {\n  Feedback\n});","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormFloating = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-floating');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nFormFloating.displayName = 'FormFloating';\nexport default FormFloating;","import * as React from 'react';\nimport { useMemo } from 'react';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormGroup = /*#__PURE__*/React.forwardRef(({\n  controlId,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const context = useMemo(() => ({\n    controlId\n  }), [controlId]);\n  return /*#__PURE__*/_jsx(FormContext.Provider, {\n    value: context,\n    children: /*#__PURE__*/_jsx(Component, {\n      ...props,\n      ref: ref\n    })\n  });\n});\nFormGroup.displayName = 'FormGroup';\nexport default FormGroup;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport warning from 'warning';\nimport Col from './Col';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormLabel = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'label',\n  bsPrefix,\n  column = false,\n  visuallyHidden = false,\n  className,\n  htmlFor,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-label');\n  let columnClass = 'col-form-label';\n  if (typeof column === 'string') columnClass = `${columnClass} ${columnClass}-${column}`;\n  const classes = classNames(className, bsPrefix, visuallyHidden && 'visually-hidden', column && columnClass);\n  process.env.NODE_ENV !== \"production\" ? warning(controlId == null || !htmlFor, '`controlId` is ignored on `<FormLabel>` when `htmlFor` is specified.') : void 0;\n  htmlFor = htmlFor || controlId;\n  if (column) return /*#__PURE__*/_jsx(Col, {\n    ref: ref,\n    as: \"label\",\n    className: classes,\n    htmlFor: htmlFor,\n    ...props\n  });\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/label-has-for, jsx-a11y/label-has-associated-control\n    _jsx(Component, {\n      ref: ref,\n      className: classes,\n      htmlFor: htmlFor,\n      ...props\n    })\n  );\n});\nFormLabel.displayName = 'FormLabel';\nexport default FormLabel;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormRange = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  id,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-range');\n  return /*#__PURE__*/_jsx(\"input\", {\n    ...props,\n    type: \"range\",\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    id: id || controlId\n  });\n});\nFormRange.displayName = 'FormRange';\nexport default FormRange;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormSelect = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  size,\n  htmlSize,\n  className,\n  isValid = false,\n  isInvalid = false,\n  id,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-select');\n  return /*#__PURE__*/_jsx(\"select\", {\n    ...props,\n    size: htmlSize,\n    ref: ref,\n    className: classNames(className, bsPrefix, size && `${bsPrefix}-${size}`, isValid && `is-valid`, isInvalid && `is-invalid`),\n    id: id || controlId\n  });\n});\nFormSelect.displayName = 'FormSelect';\nexport default FormSelect;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormText = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  as: Component = 'small',\n  muted,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-text');\n  return /*#__PURE__*/_jsx(Component, {\n    ...props,\n    ref: ref,\n    className: classNames(className, bsPrefix, muted && 'text-muted')\n  });\n});\nFormText.displayName = 'FormText';\nexport default FormText;","import * as React from 'react';\nimport FormCheck from './FormCheck';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Switch = /*#__PURE__*/React.forwardRef((props, ref) => /*#__PURE__*/_jsx(FormCheck, {\n  ...props,\n  ref: ref,\n  type: \"switch\"\n}));\nSwitch.displayName = 'Switch';\nexport default Object.assign(Switch, {\n  Input: FormCheck.Input,\n  Label: FormCheck.Label\n});","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport FormGroup from './FormGroup';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst FloatingLabel = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  children,\n  controlId,\n  label,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-floating');\n  return /*#__PURE__*/_jsxs(FormGroup, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    controlId: controlId,\n    ...props,\n    children: [children, /*#__PURE__*/_jsx(\"label\", {\n      htmlFor: controlId,\n      children: label\n    })]\n  });\n});\nFloatingLabel.displayName = 'FloatingLabel';\nexport default FloatingLabel;","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport FormCheck from './FormCheck';\nimport FormControl from './FormControl';\nimport FormFloating from './FormFloating';\nimport FormGroup from './FormGroup';\nimport FormLabel from './FormLabel';\nimport FormRange from './FormRange';\nimport FormSelect from './FormSelect';\nimport FormText from './FormText';\nimport Switch from './Switch';\nimport FloatingLabel from './FloatingLabel';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  /**\n   * The Form `ref` will be forwarded to the underlying element,\n   * which means, unless it's rendered `as` a composite component,\n   * it will be a DOM node, when resolved.\n   *\n   * @type {ReactRef}\n   * @alias ref\n   */\n  _ref: PropTypes.any,\n  /**\n   * Mark a form as having been validated. Setting it to `true` will\n   * toggle any validation styles on the forms elements.\n   */\n  validated: PropTypes.bool,\n  as: PropTypes.elementType\n};\nconst Form = /*#__PURE__*/React.forwardRef(({\n  className,\n  validated,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'form',\n  ...props\n}, ref) => /*#__PURE__*/_jsx(Component, {\n  ...props,\n  ref: ref,\n  className: classNames(className, validated && 'was-validated')\n}));\nForm.displayName = 'Form';\nForm.propTypes = propTypes;\nexport default Object.assign(Form, {\n  Group: FormGroup,\n  Control: FormControl,\n  Floating: FormFloating,\n  Check: FormCheck,\n  Switch,\n  Label: FormLabel,\n  Text: FormText,\n  Range: FormRange,\n  Select: FormSelect,\n  FloatingLabel\n});","import React, { useRef } from \"react\";\r\nimport { Form,Button } from \"react-bootstrap\";\r\n\r\n\r\nconst Contact = (props) => {\r\n    const nameRef = useRef();\r\n    const emailRef = useRef();\r\n    const phoneRef = useRef();\r\n\r\n    const submitHandler = (event)=>{\r\n        event.preventDefault();\r\n        const obj = {\r\n            name:nameRef.current.value,\r\n            email:emailRef.current.value,\r\n            phone:phoneRef.current.value\r\n        }\r\n        console.log(obj)\r\n        props.onAdd(obj);\r\n        nameRef.current.value = '';\r\n        emailRef.current.value = '';\r\n        phoneRef.current.value = '';\r\n\r\n    }\r\n\r\n    return (\r\n        <Form onSubmit={submitHandler}>\r\n            <Form.Group className=\"mb-3\" >\r\n                <Form.Label>Name</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"Enter Name\" ref={nameRef}/>\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\" >\r\n                <Form.Label>Email address</Form.Label>\r\n                <Form.Control type=\"email\" placeholder=\"Enter Email\" ref={emailRef} />\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\" >\r\n                <Form.Label>Email address</Form.Label>\r\n                <Form.Control type=\"tel\" placeholder=\"Enter Phone Number\" ref={phoneRef}/>\r\n            </Form.Group>\r\n            <Button variant=\"primary\" type=\"submit\">\r\n                submit\r\n            </Button>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default Contact;"],"names":["propTypes","type","PropTypes","tooltip","as","Feedback","React","_ref","ref","Component","className","props","_jsx","classNames","concat","displayName","FormCheckInput","id","bsPrefix","isValid","isInvalid","controlId","useContext","FormContext","useBootstrapPrefix","FormCheckLabel","htmlFor","FormCheck","bsSwitchPrefix","inline","reverse","disabled","feedbackTooltip","feedback","feedbackType","style","title","label","children","innerFormContext","useMemo","hasLabel","toArray","some","child","hasChildOfType","input","Provider","value","_jsxs","_Fragment","Object","assign","Input","Label","FormControl","size","htmlSize","plaintext","readOnly","FormFloating","FormGroup","context","FormLabel","column","visuallyHidden","columnClass","classes","Col","FormRange","FormSelect","FormText","muted","Switch","FloatingLabel","validated","Form","Group","Control","Floating","Check","Text","Range","Select","nameRef","useRef","emailRef","phoneRef","onSubmit","event","preventDefault","obj","name","current","email","phone","console","log","onAdd","placeholder","Button","variant"],"sourceRoot":""}